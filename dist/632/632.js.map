{"version":3,"file":"632/632.js","mappings":"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","sources":["webpack://chocolatestore/./src/features/forms/testform.css?9018","webpack://chocolatestore/./src/features/forms/testform.tsx","webpack://chocolatestore/./src/features/forms/utils/utils.ts","webpack://chocolatestore/./src/features/forms/testform.css","webpack://chocolatestore//home/elizabeth/Desktop/ts-projects/chocolatestore/client/src/assets|sync|/^\\.\\/.*$/"],"sourcesContent":["import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./testform.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import * as React from 'react';\nimport { ICategory } from '../category/categorySlice';\nimport './testform.css';\n\ninterface IFormWarning {\n  orderIdentifier: number;\n  warning: string;\n}\n\ninterface ILabelForm {\n  orderIdentifier: number;\n  label: string;\n  htmlFor?: string;\n}\n\ntype FieldTextarea = {\n  orderIdentifier: number;\n  name: string;\n  id?: string;\n  placeholder?: string;\n  defaultValue?: string;\n  form?: string;\n  required?: boolean;\n  disabled?: boolean;\n  minLength?: number;\n  maxLength?: number;\n  rows?: number;\n  cols?: number;\n  onChange?: React.ChangeEventHandler;\n};\n\ntype SelectOptions = {\n  value: string;\n  id: string;\n  label: string;\n};\n\ntype MultipleFieldSelect = {\n  orderIdentifier: number;\n  label: string;\n  form?: string;\n  name: string;\n  id?: string;\n  required?: boolean;\n  options: SelectOptions[];\n  onChange?: React.ChangeEventHandler;\n  onClickListener?: (e: MultipleSelectStateValues) => void;\n  onStateListener?: (e: MultipleSelectState) => void;\n  feedState?: ICategory[];\n};\n\ntype FieldSelect = {\n  orderIdentifier: number;\n  name: string;\n  form?: string;\n  id?: string;\n  required?: boolean;\n  multiple?: boolean;\n  options: SelectOptions[];\n  onChange?: React.ChangeEventHandler;\n};\n\ntype FieldInputs = {\n  orderIdentifier: number;\n  type: string;\n  name: string;\n  step?: string;\n  pattern?: string;\n  required?: boolean;\n  title?: string;\n  minLength?: number;\n  maxLength?: number;\n  id?: string;\n  placeholder?: string;\n  defaultValue?: string;\n  value?: string;\n  disabled?: boolean;\n  onChange?: React.ChangeEventHandler;\n};\n\ntype FieldTypeArray = {\n  labels?: ILabelForm[];\n  input?: FieldInputs[];\n  select?: FieldSelect[];\n  multiselect?: MultipleFieldSelect[];\n  textarea?: FieldTextarea[];\n  warning?: IFormWarning[];\n};\n\ninterface IProfileForm {\n  fields: FieldTypeArray;\n  headlabel: string;\n  submitlabel: string;\n  onSubmit: React.FormEventHandler<HTMLFormElement> | undefined;\n}\n\nexport function TestForm({ fields, onSubmit, headlabel, submitlabel }: IProfileForm): JSX.Element {\n  const parsed = parseFormJSON(fields);\n  return (\n    <form id='badumts-form' className='badumts-form' onSubmit={onSubmit}>\n      <h1 id='badumts-form__headlabel'>{headlabel}</h1>\n      {parsed.map((com) => {\n        switch (com.component) {\n          case 'input':\n            return (\n              <InputForm\n                orderIdentifier={com.orderIdentifier}\n                name={com.name}\n                id={com.id}\n                step={com.step}\n                placeholder={com.placeholder}\n                defaultValue={com.defaultValue}\n                value={com.value}\n                title={com.title}\n                type={com.type}\n                required={com.required}\n                onChange={com.onChange}\n                key={com.orderIdentifier}\n              />\n            );\n          case 'labels':\n            return (\n              <LabelForm\n                orderIdentifier={com.orderIdentifier}\n                htmlFor={com.htmlFor}\n                label={com.label}\n                key={com.orderIdentifier}\n              />\n            );\n          case 'select':\n            return (\n              <SelectForm\n                orderIdentifier={com.orderIdentifier}\n                form={com.form}\n                id={com.id}\n                name={com.name}\n                multiple={com.multiple}\n                options={com.options}\n                onChange={com.onChange}\n                key={com.orderIdentifier}\n              />\n            );\n          case 'multiselect':\n            return (\n              <MultipleSelectForm\n                orderIdentifier={com.orderIdentifier}\n                key={com.orderIdentifier}\n                form={com.form}\n                id={com.id}\n                name={com.name}\n                options={com.options}\n                onChange={com.onChange}\n                required={com.required}\n                label={com.label}\n                onClickListener={com.onClickListener}\n                onStateListener={com.onStateListener}\n                feedState={com.feedState}\n              />\n            );\n          case 'textarea':\n            return (\n              <TextareaForm\n                orderIdentifier={com.orderIdentifier}\n                key={com.orderIdentifier}\n                form={com.form}\n                name={com.name}\n                id={com.id}\n                placeholder={com.placeholder}\n                defaultValue={com.defaultValue}\n                rows={com.rows}\n                cols={com.cols}\n                onChange={com.onChange}\n              />\n            );\n          case 'warning':\n            return (\n              <FormWarning\n                warning={com.warning}\n                orderIdentifier={com.orderIdentifier}\n                key={com.orderIdentifier}\n              />\n            );\n          default:\n            return;\n        }\n      })}\n      <button type='submit' disabled={false}>\n        {submitlabel}\n      </button>\n    </form>\n  );\n}\n\n//type ComponentKey = 'labels' | 'input' | 'select' | 'multiselect' | 'textarea' | 'warning';\n\ntype FieldTypeArrayJSON = {\n  [key: string]: FormComponent[];\n};\n\ntype FormComponent =\n  | ILabelForm\n  | FieldInputs\n  | FieldSelect\n  | MultipleFieldSelect\n  | FieldTextarea\n  | IFormWarning;\n\ntype FormComponentNewMember<T> = T & { component: string; orderIdentifier: number };\n\nfunction sortByOI<T extends { orderIdentifier: number }>(a: T, b: T): number {\n  if (a.orderIdentifier > b.orderIdentifier) return 1;\n  if (a.orderIdentifier < b.orderIdentifier) return -1;\n  return 0;\n}\n\nexport function parseFormJSON<Fields extends FieldTypeArrayJSON>(\n  fields: Fields\n): FormComponentNewMember<any>[] {\n  const storage: FormComponentNewMember<FormComponent>[] = [];\n  for (const i in fields) {\n    fields[i].forEach(function (com: FormComponent) {\n      storage.push({ ...com, component: i } as FormComponentNewMember<FormComponent>);\n    });\n  }\n  return storage.sort(sortByOI);\n}\n\nfunction LabelForm({ label, htmlFor }: ILabelForm): JSX.Element {\n  return <label htmlFor={htmlFor}>{label}</label>;\n}\n\nfunction InputForm({\n  type,\n  name,\n  id,\n  step,\n  placeholder,\n  defaultValue,\n  value,\n  minLength,\n  maxLength,\n  disabled,\n  pattern,\n  title,\n  required,\n  onChange,\n}: FieldInputs): JSX.Element {\n  return (\n    <input\n      key={id}\n      type={type}\n      name={name}\n      id={id}\n      step={step}\n      placeholder={placeholder}\n      defaultValue={defaultValue}\n      value={value}\n      minLength={minLength}\n      maxLength={maxLength}\n      disabled={disabled}\n      pattern={pattern}\n      title={title}\n      required={required}\n      onChange={onChange}\n    />\n  );\n}\n\nfunction SelectForm({ form, name, id, multiple, options, onChange }: FieldSelect): JSX.Element {\n  return (\n    <select multiple={multiple} form={form} name={name} id={id} onChange={onChange}>\n      {options.map(({ id, label, value }) => (\n        <option value={value} key={id}>\n          {label}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport type MultipleSelectState = {\n  open: boolean;\n  values: MultipleSelectStateValues[];\n};\n\nexport type MultipleSelectStateValues = {\n  id: string;\n  name: string;\n  index: number;\n};\n\nexport function MultipleSelectForm({\n  required,\n  form,\n  id,\n  name,\n  label,\n  options,\n  onClickListener,\n  onStateListener,\n  feedState,\n}: MultipleFieldSelect): JSX.Element {\n  type FormAction =\n    | { type: 'open'; payload: boolean }\n    | { type: 'values'; payload: MultipleSelectStateValues };\n  function addToState(\n    state: MultipleSelectStateValues[],\n    item: MultipleSelectStateValues\n  ): MultipleSelectStateValues[] {\n    if (state.length === 0) {\n      return [...state, item];\n    }\n    const existingItem = state.find((e) => item.id === e.id);\n    if (existingItem) {\n      return state.filter((e) => e.id !== item.id);\n    }\n    return [...state, { ...item }];\n  }\n  function formReducer(state: typeof initialState, action: FormAction): MultipleSelectState {\n    switch (action.type) {\n      case 'open': {\n        return {\n          ...state,\n          open: action.payload,\n        };\n      }\n      case 'values': {\n        return {\n          ...state,\n          values: addToState(state.values, action.payload),\n        };\n      }\n      default:\n        return state;\n    }\n  }\n  const initialState: MultipleSelectState = {\n    open: false,\n    values: [],\n  };\n  const [formState, formDispatch] = React.useReducer(formReducer, initialState);\n  const uref = React.useRef<null | HTMLDivElement>(null);\n  const jref = React.useRef<null | HTMLDivElement>(null);\n  const kref = React.useRef<null | HTMLSelectElement>(null);\n\n  const handleClickOutside = (event: Event) => {\n    if (\n      formState.open === true &&\n      uref.current &&\n      jref.current &&\n      !uref.current.contains(event.target as Node) &&\n      !jref.current.contains(event.target as Node)\n    ) {\n      formDispatch({ type: 'open', payload: !formState.open });\n    }\n  };\n\n  /* Do not delete!\n   * This is used make a copy out of selection options,\n   * so that the clickHandler can ensure the selected item\n   * exists in the selection options */\n  const formStruct: Array<{ value: string; index: number }> = [];\n  const testEl: HTMLOptionElement[] = [];\n\n  React.useEffect(() => {\n    kref.current && formStruct.length === 0\n      ? Array.from(kref.current.childNodes).forEach((e) => {\n          formStruct.push({\n            value: (e as HTMLOptionElement).value,\n            index: (e as HTMLOptionElement).index,\n          });\n        })\n      : null;\n    kref.current\n      ? kref.current.childNodes.forEach((e) => {\n          testEl.push(e as HTMLOptionElement);\n        })\n      : null;\n  }, [formStruct]);\n\n  React.useEffect(() => {\n    onStateListener && onStateListener(formState);\n  }, [formState]);\n\n  React.useEffect(() => {\n    if (feedState) {\n      initialStateHandler(feedState);\n    }\n  }, []);\n\n  /* if initialState is provided */\n  /* if initialState is provided, array of category ids is constructed\n   * to see if the initialState has categories by comparing their values\n   * to the HTMLOptionElements dataset values. If the values collide,\n   * then selected property is flipped (to be selected) */\n  function initialStateHandler(feedState: ICategory[]) {\n    const matchArr = feedState.map(({ id }) => id);\n    if (feedState.length >= 1 && kref.current) {\n      Array.from(kref.current.options).forEach((e) => {\n        if (matchArr.includes(e.value) && e.dataset['id'] && e.dataset['name']) {\n          e.selected = !e.selected;\n          formDispatch({\n            type: 'values',\n            payload: { id: e.dataset['id'], index: e.index, name: e.dataset['name'] },\n          });\n        }\n      });\n    }\n  }\n\n  function clickHandler(event: React.MouseEvent<HTMLDivElement | HTMLOptionElement>) {\n    if (!Array.from(event.currentTarget.classList).includes('item')) {\n      formDispatch({ type: 'open', payload: !formState.open });\n    }\n\n    /* flips the HTMLOptionElement's selected property by comparing it to the clicked HTMLDivElement\n     * and also sets the index to keep the items sorted */\n    if (kref.current && event.currentTarget.classList.contains('item')) {\n      const refVal = { ...event.currentTarget.dataset };\n      let oindex;\n      Array.from(kref.current.options).forEach((e) => {\n        if (e.dataset.id === refVal.id) {\n          e.selected = !e.selected;\n          oindex = e.index;\n        }\n      });\n\n      if (refVal.name && refVal.id && oindex !== undefined) {\n        onClickListener &&\n          onClickListener({ id: refVal['id'], index: oindex, name: refVal['name'] });\n        formDispatch({\n          type: 'values',\n          payload: { id: refVal.id, index: oindex, name: refVal.name },\n        });\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside, true);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside, true);\n    };\n  }, [formState.open]);\n\n  return (\n    <div id={id} className='multiple-select'>\n      <div className='label' ref={uref} onClick={(e) => clickHandler(e)}>\n        {label}\n      </div>\n      <select required={required} multiple form={form} name={name} id={id} ref={kref}>\n        {options.map(({ id, label, value }) => (\n          <option value={value} key={id} data-id={id} data-name={label}>\n            {label}\n          </option>\n        ))}\n      </select>\n      <div ref={jref} className={formState.open ? 'multiple-ul--open' : 'multiple-ul--closed'}>\n        {options.map(({ id, label }) => (\n          <div\n            key={id}\n            onClick={(e) => clickHandler(e)}\n            className={formState.open ? 'item li--open' : 'item li--closed'}\n            style={formState.values.find((e) => e.id === id) ? { background: '#d3d3d3' } : {}}\n            data-name={label}\n            data-id={id}\n            data-cy={`option-${label}`}\n            id={id}\n          >\n            {label}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction TextareaForm({\n  name,\n  id,\n  placeholder,\n  defaultValue,\n  form,\n  required,\n  disabled,\n  maxLength,\n  minLength,\n  rows,\n  cols,\n  onChange,\n}: FieldTextarea): JSX.Element {\n  return (\n    <textarea\n      name={name}\n      id={id}\n      placeholder={placeholder}\n      defaultValue={defaultValue}\n      form={form}\n      required={required}\n      disabled={disabled}\n      rows={rows}\n      cols={cols}\n      minLength={minLength}\n      maxLength={maxLength}\n      onChange={onChange}\n    ></textarea>\n  );\n}\n\nfunction FormWarning({ warning }: IFormWarning): JSX.Element {\n  return <p id='form-warning'>{warning}</p>;\n}\n","import { CategoryDTO, ICategory } from '../../category/categorySlice';\n\ntype FormObject = {\n  [key: string]: string;\n};\n\nexport function handleForm(nodelist: HTMLFormControlsCollection): FormObject {\n  const list = Array.from(nodelist)\n    .filter(\n      (e) =>\n        e.nodeName === 'INPUT' ||\n        (e.nodeName === 'SELECT' && (e as HTMLSelectElement).multiple === false) ||\n        e.nodeName === 'TEXTAREA'\n    )\n    .map((e) => [\n      (e as HTMLInputElement).name,\n      (e as HTMLInputElement).type === 'file'\n        ? ((e as HTMLInputElement).files as FileList)[0].name\n        : (e as HTMLInputElement).value,\n    ]);\n  return Object.fromEntries(list);\n}\n\nexport function handleFormCategories_GUEST(selectForm: HTMLSelectElement): ICategory[] {\n  return Array.from(selectForm.selectedOptions).map((optionEl) => ({\n    id: optionEl.value,\n    cname: optionEl.text,\n  }));\n}\n\nexport function handleFormCategories(selectForm: HTMLSelectElement): CategoryDTO[] {\n  return Array.from(selectForm.selectedOptions).map((optionEl) => ({\n    id: optionEl.value,\n  }));\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".badumts-form {\\n  font-family: 'Montserrat';\\n  position: relative;\\n  padding: 2.5rem;\\n  background-color: #232946;\\n}\\n\\n#badumts-form__headlabel {\\n  font-size: 2.4rem;\\n  z-index: 9;\\n  margin-bottom: 1rem;\\n}\\n\\n.badumts-form label {\\n  color: #fffffe;\\n  line-height: 1;\\n  display: block;\\n  font-weight: 300;\\n  margin: 0.5rem 0rem 0.5rem 0rem;\\n}\\n\\n.badumts-form input {\\n  font-family: 'Montserrat', sans-serif;\\n  width: 100%;\\n  padding: .8rem;\\n  margin-bottom: 1rem;\\n  border-radius: 4px;\\n  border: none;\\n  outline: 0;\\n}\\n\\n.badumts-form button[type=submit] {\\n  width: auto;\\n  font-family: 'Roboto', sans-serif;\\n  font-size: 1em;\\n  background: #f5f5f5;\\n  color: #131313;\\n  outline: 0;\\n  border: 0;\\n  border: none;\\n  margin-top: 1em;\\n  padding: 15px;\\n  letter-spacing: 1px;\\n  cursor: pointer;\\n  transition: all .5s;\\n}\\n\\n#form-warning {\\n  display: inline-block;\\n  font-family: 'Rubik', sans-serif;\\n  color: orange;\\n  font-size: 1.2em;\\n  width: 100%;\\n}\\n\\n.multiple-select {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  border: 1px solid #e3e3e3;\\n  background: #fffffe;\\n  transition: all .5s;\\n  cursor: pointer;\\n}\\n\\n.multiple-select .label {\\n  width: 100%;\\n  padding: .5em;\\n  margin-left: .5em;\\n}\\n\\n.multiple-select select {\\n  display: none !important;\\n}\\n\\n.multiple-select option {\\n  display: none !important;\\n}\\n\\n.multiple-ul--open {\\n  border-radius: 4px;\\n  display: flex;\\n  flex-direction: column;\\n  font-size: 1em;\\n  width: 100%;\\n  cursor: pointer;\\n  transition: all .5s;\\n  margin-left: .5em;\\n}\\n\\n.multiple-ul--closed {\\n  display: none;\\n  transition: all .5s;\\n}\\n\\n.li--open {\\n  padding: .2em;\\n  font-size: 1.2em;\\n  cursor: pointer;\\n  transition: all .5s;\\n}\\n\\n.li--open:hover {\\n  background: rgba(0,0,0,.04);\\n}\\n\\n.li--closed {\\n  transition: all .5s;\\n  display: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/features/forms/testform.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;EACf,yBAAyB;AAC3B;;AAEA;EACE,iBAAiB;EACjB,UAAU;EACV,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,cAAc;EACd,cAAc;EACd,gBAAgB;EAChB,+BAA+B;AACjC;;AAEA;EACE,qCAAqC;EACrC,WAAW;EACX,cAAc;EACd,mBAAmB;EACnB,kBAAkB;EAClB,YAAY;EACZ,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,iCAAiC;EACjC,cAAc;EACd,mBAAmB;EACnB,cAAc;EACd,UAAU;EACV,SAAS;EACT,YAAY;EACZ,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,qBAAqB;EACrB,gCAAgC;EAChC,aAAa;EACb,gBAAgB;EAChB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,yBAAyB;EACzB,mBAAmB;EACnB,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,iBAAiB;AACnB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;EAClB,aAAa;EACb,sBAAsB;EACtB,cAAc;EACd,WAAW;EACX,eAAe;EACf,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,mBAAmB;EACnB,aAAa;AACf\",\"sourcesContent\":[\".badumts-form {\\n  font-family: 'Montserrat';\\n  position: relative;\\n  padding: 2.5rem;\\n  background-color: #232946;\\n}\\n\\n#badumts-form__headlabel {\\n  font-size: 2.4rem;\\n  z-index: 9;\\n  margin-bottom: 1rem;\\n}\\n\\n.badumts-form label {\\n  color: #fffffe;\\n  line-height: 1;\\n  display: block;\\n  font-weight: 300;\\n  margin: 0.5rem 0rem 0.5rem 0rem;\\n}\\n\\n.badumts-form input {\\n  font-family: 'Montserrat', sans-serif;\\n  width: 100%;\\n  padding: .8rem;\\n  margin-bottom: 1rem;\\n  border-radius: 4px;\\n  border: none;\\n  outline: 0;\\n}\\n\\n.badumts-form button[type=submit] {\\n  width: auto;\\n  font-family: 'Roboto', sans-serif;\\n  font-size: 1em;\\n  background: #f5f5f5;\\n  color: #131313;\\n  outline: 0;\\n  border: 0;\\n  border: none;\\n  margin-top: 1em;\\n  padding: 15px;\\n  letter-spacing: 1px;\\n  cursor: pointer;\\n  transition: all .5s;\\n}\\n\\n#form-warning {\\n  display: inline-block;\\n  font-family: 'Rubik', sans-serif;\\n  color: orange;\\n  font-size: 1.2em;\\n  width: 100%;\\n}\\n\\n.multiple-select {\\n  position: relative;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  border: 1px solid #e3e3e3;\\n  background: #fffffe;\\n  transition: all .5s;\\n  cursor: pointer;\\n}\\n\\n.multiple-select .label {\\n  width: 100%;\\n  padding: .5em;\\n  margin-left: .5em;\\n}\\n\\n.multiple-select select {\\n  display: none !important;\\n}\\n\\n.multiple-select option {\\n  display: none !important;\\n}\\n\\n.multiple-ul--open {\\n  border-radius: 4px;\\n  display: flex;\\n  flex-direction: column;\\n  font-size: 1em;\\n  width: 100%;\\n  cursor: pointer;\\n  transition: all .5s;\\n  margin-left: .5em;\\n}\\n\\n.multiple-ul--closed {\\n  display: none;\\n  transition: all .5s;\\n}\\n\\n.li--open {\\n  padding: .2em;\\n  font-size: 1.2em;\\n  cursor: pointer;\\n  transition: all .5s;\\n}\\n\\n.li--open:hover {\\n  background: rgba(0,0,0,.04);\\n}\\n\\n.li--closed {\\n  transition: all .5s;\\n  display: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var map = {\n\t\"./Untitled.png\": 6898,\n\t\"./admin.jpg\": 7744,\n\t\"./bar.jpg\": 3985,\n\t\"./bear.jpg\": 5634,\n\t\"./brownies.jpg\": 1676,\n\t\"./burgers.jpg\": 7045,\n\t\"./chipmuffins.jpg\": 8415,\n\t\"./choccookies.jpg\": 427,\n\t\"./chocolate-bar.png\": 7050,\n\t\"./chocolate.jpg\": 4728,\n\t\"./chocolate.png\": 5618,\n\t\"./chocolate.svg\": 2462,\n\t\"./chocolate2.jpg\": 9732,\n\t\"./cofe.jpg\": 6829,\n\t\"./confectionery.jpg\": 4209,\n\t\"./cookie_treat.jpg\": 7858,\n\t\"./cookies.jpg\": 3534,\n\t\"./cremebiscuits.jpg\": 7906,\n\t\"./dark-choc.jpg\": 5737,\n\t\"./darkbar2.jpg\": 8146,\n\t\"./darkbars.jpg\": 746,\n\t\"./darkbars2.jpg\": 220,\n\t\"./delicious.jpg\": 2878,\n\t\"./delicious2.jpg\": 8751,\n\t\"./footer.png\": 4043,\n\t\"./freshdark.jpg\": 8133,\n\t\"./fudge.jpg\": 7575,\n\t\"./fudgeround.jpg\": 7368,\n\t\"./hazelnut.jpg\": 368,\n\t\"./hearts.jpg\": 284,\n\t\"./homebottom.jpg\": 873,\n\t\"./homefront.jpg\": 6668,\n\t\"./homemiddle.jpg\": 8584,\n\t\"./hot-cofe.jpg\": 2507,\n\t\"./macaroons.jpg\": 9475,\n\t\"./magnifying-glass.png\": 7283,\n\t\"./milk-choc.jpg\": 11,\n\t\"./milkslab.jpg\": 8542,\n\t\"./ni.jpg\": 5095,\n\t\"./nom.jpg\": 3624,\n\t\"./nut.jpg\": 4490,\n\t\"./raspberry.jpg\": 2923,\n\t\"./round.jpg\": 3734,\n\t\"./sandwich.jpg\": 661,\n\t\"./slicedjelly.jpg\": 8923,\n\t\"./testing.png\": 1667,\n\t\"./toast.png\": 7114,\n\t\"./truffles.jpg\": 9242,\n\t\"./white.jpg\": 2733,\n\t\"./white2.jpg\": 6942,\n\t\"./white3.jpg\": 6657,\n\t\"./whitechocolate.jpg\": 3812\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 7173;"],"names":["TestForm","fields","onSubmit","headlabel","submitlabel","parsed","storage","i","forEach","com","push","component","sort","sortByOI","parseFormJSON","id","className","map","InputForm","orderIdentifier","name","step","placeholder","defaultValue","value","title","type","required","onChange","LabelForm","htmlFor","label","SelectForm","form","multiple","options","MultipleSelectForm","onClickListener","onStateListener","feedState","TextareaForm","rows","cols","FormWarning","warning","disabled","a","b","minLength","maxLength","pattern","addToState","state","item","length","find","e","filter","React","action","open","payload","values","formState","formDispatch","uref","jref","kref","handleClickOutside","event","current","contains","target","formStruct","testEl","clickHandler","Array","from","currentTarget","classList","includes","oindex","refVal","dataset","selected","index","undefined","childNodes","matchArr","initialStateHandler","document","addEventListener","removeEventListener","ref","onClick","style","background","handleForm","nodelist","list","nodeName","files","Object","fromEntries","handleFormCategories_GUEST","selectForm","selectedOptions","optionEl","cname","text","handleFormCategories","___CSS_LOADER_EXPORT___","module","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve","exports"],"sourceRoot":""}